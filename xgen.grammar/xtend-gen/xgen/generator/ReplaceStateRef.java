/**
 * generated by Xtext
 */
package xgen.generator;

import com.google.common.base.Objects;
import java.util.List;
import java.util.Random;
import org.eclipse.xtext.xbase.lib.Functions.Function0;
import xgen.parsetree.Leaf;
import xgen.postprocess.ReplaceAll;

@SuppressWarnings("all")
public class ReplaceStateRef extends ReplaceAll {
  private final Random random = new Function0<Random>() {
    public Random apply() {
      Random _random = new Random();
      return _random;
    }
  }.apply();
  
  private final List<String> exchange;
  
  public ReplaceStateRef(final List<String> exchange) {
    this.exchange = exchange;
  }
  
  protected boolean candidate(final Leaf it) {
    boolean _equals = Objects.equal(it.value, "<state ref>");
    return _equals;
  }
  
  protected Leaf replace(final Leaf it) {
    int _size = this.exchange.size();
    int _nextInt = this.random.nextInt(_size);
    String _get = this.exchange.get(_nextInt);
    Leaf _leaf = new Leaf(_get);
    return _leaf;
  }
}
