/**
 * generated by Xtext
 */
package xgen.generator;

import com.google.common.base.Objects;
import java.util.List;
import java.util.Random;
import org.eclipse.xtext.xbase.lib.Functions.Function0;
import xgen.parsetree.Leaf;
import xgen.postprocess.TransformAll;

@SuppressWarnings("all")
public class ReplaceStateRef extends TransformAll {
  private final Random random = new Function0<Random>() {
    public Random apply() {
      Random _random = new Random();
      return _random;
    }
  }.apply();
  
  private final List<String> exchange;
  
  public ReplaceStateRef(final List<String> exchange) {
    this.exchange = exchange;
  }
  
  protected Leaf transform(final Leaf it) {
    Leaf _xblockexpression = null;
    {
      boolean _notEquals = (!Objects.equal(it.value, "<state ref>"));
      if (_notEquals) {
        return it;
      }
      int _size = this.exchange.size();
      int _nextInt = this.random.nextInt(_size);
      String _get = this.exchange.get(_nextInt);
      Leaf _leaf = new Leaf(_get);
      _xblockexpression = (_leaf);
    }
    return _xblockexpression;
  }
}
